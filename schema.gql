# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Workplaces of users"""
type AreasTrabajo {
  centrosTrabajo: [CentrosTrabajo!]
  cliente: Cliente!
  descripcion: String
  empresa: Empresa!
  estatus: Boolean!
  id: ID!
  nombre: String!
}

"""Book Authors"""
type Author {
  email: String!
  id: ID!
  name: String!
}

input AuthorInput {
  email: String!
  name: String!
}

"""The books model"""
type Book {
  author: Author
  description: String
  id: ID!

  """Nombre del libro"""
  name: String!
}

input BookInput {
  author: String!
  description: String
  name: String!
}

"""Work Centers of Companies"""
type CentrosTrabajo {
  cliente: String!
  cp: String!
  direccion: String!
  empresa: Empresa!
  estatus: Boolean
  id: ID!
  nombre: String!
  telefono: String
}

"""Clients of Pro035"""
type Cliente {
  alias: String!
  calle: String
  colonia: String
  cp: String!
  estatus: Boolean
  id: ID!
  razonSocial: String!
  rfc: String!
}

input CompanyInput {
  alias: String!
  cp: String!
  direccion: String!
  giro: String!
  razonSocial: String!
  rfc: String!
}

"""Companies of clientes"""
type Empresa {
  alias: String!
  cliente: String!
  cp: String!
  direccion: String!
  estatus: Boolean!
  giro: String!
  id: ID!
  logo: String!
  principalesActividades: String!
  razonSocial: String!
  rfc: String!
}

type Mutation {
  createAuthor(author: AuthorInput!): Author!
  createBook(book: BookInput!): Book!
  createCompany(input: CompanyInput!, logo: Upload!): Empresa
  createPosition(input: PositionInput!): Puesto
  createUser(user: UserInput!): Usuario
  createWorkArea(input: WorkAreaInput!): AreasTrabajo
  createWorkCenter(workCenter: WorkCenterInput!): CentrosTrabajo
  deletePosition(id: String!): Puesto
  deleteUser(id: String!): Usuario
  deleteWorkArea(id: String!): AreasTrabajo
  deleteWorkCenter(id: String!): CentrosTrabajo
  updatePosition(id: String!, input: PositionUpdateInput!): Puesto
  updateUser(id: String!, input: UserUpdateInput!): Usuario
  updateWorkArea(id: String!, input: WorkAreaUpdateInput!): AreasTrabajo
  updateWorkCenter(id: String!, input: WorkCenterUpdateInput!): CentrosTrabajo
}

input PositionInput {
  descripcion: String!
  empresa: String!
  nombre: String!
}

input PositionUpdateInput {
  descripcion: String!
  empresa: String
  nombre: String!
}

"""Jobs Positions of Users"""
type Puesto {
  cliente: Cliente!
  descripcion: String
  empresa: Empresa
  estatus: Boolean!
  id: ID!
  nombre: String
}

type Query {
  author(id: String!): Author!
  authors: [Author!]!
  book(id: String!): Book
  books: [Book!]
  companies: [Empresa!]
  companiesByClient: [Empresa!]
  positionByCompany(company: String!, position: String!): Puesto
  positionsByCompany(company: String!): [Puesto!]
  user(company: String!, id: String!): Usuario
  users: [Usuario!]
  usersByCompany(company: String!): [Usuario!]
  workAreaByCompany(company: String!, workArea: String!): AreasTrabajo
  workAreasByCompany(company: String!): [AreasTrabajo!]
  workCenterByCompany(company: String!, workCenter: String!): CentrosTrabajo
  workCentersByCompany(company: String!): [CentrosTrabajo!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UserInput {
  apellidoMaterno: String!
  apellidoPaterno: String!
  centroTrabajo: String!
  email: String!
  empresa: String!
  nombre: String!
  password: String!
  usuario: String!
}

input UserUpdateInput {
  apellidoMaterno: String!
  apellidoPaterno: String!
  areaTrabajo: String
  centroTrabajo: String!
  email: String!
  estadoCivil: String
  experienciaPuestoActual: String
  genero: String
  nivelEstudios: String
  nombre: String!
  password: String
  puesto: String
  rangoEdad: String
  rolarTurnos: String
  tiempoExperienciaLaboral: String
  tipoContratacion: String
  tipoJornada: String
  tipoPersonal: String
  tipoPuesto: String
  usuario: String!
}

"""The books model"""
type Usuario {
  apellidoMaterno: String!
  apellidoPaterno: String!
  areaTrabajo: AreasTrabajo
  centroTrabajo: CentrosTrabajo
  cliente: String!
  email: String!
  empresa: Empresa
  estadoCivil: String
  estatus: Boolean!
  experienciaPuestoActual: String
  firstLogin: Boolean!
  id: ID!
  nivelEstudios: String
  nombre: String!
  password: String
  perfil: String!
  puesto: Puesto
  rangoEdad: String
  rolarTurnos: String
  tiempoExperienciaLaboral: String
  tipoContratacion: String
  tipoJornada: String
  tipoPersonal: String
  tipoPuesto: String
  usuario: String!
}

input WorkAreaInput {
  centrosTrabajo: [String!]!
  descripcion: String
  empresa: String!
  nombre: String!
}

input WorkAreaUpdateInput {
  centrosTrabajo: [String!]!
  descripcion: String
  nombre: String!
}

input WorkCenterInput {
  cp: String!
  direccion: String!
  empresa: String!
  nombre: String!
  telefono: String!
}

input WorkCenterUpdateInput {
  cp: String!
  direccion: String!
  nombre: String!
  telefono: String!
}
